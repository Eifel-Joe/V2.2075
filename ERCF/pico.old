#########################
### Macro-Box Pi Pico ###
#########################

[gcode_macro _button_1]
gcode:
  {% if printer['print_stats'].state == "standby" or printer['print_stats'].state == "paused" %}
    CHANGE_MANUAL T=0
  {% endif %}
  
[gcode_macro _button_2]
gcode:
  {% if printer['print_stats'].state == "standby" or printer['print_stats'].state == "paused" %}
    CHANGE_MANUAL T=1
  {% endif %}

[gcode_macro _button_3]
gcode:
  {% if printer['print_stats'].state == "standby" or printer['print_stats'].state == "paused" %}
    CHANGE_MANUAL T=2
  {% endif %}

[gcode_macro _button_4]
gcode:
  {% if printer['print_stats'].state == "standby" or printer['print_stats'].state == "paused" %}
    CHANGE_MANUAL T=3
  {% endif %}

[gcode_macro _button_5]
gcode:
  {% if printer['print_stats'].state == "standby" or printer['print_stats'].state == "paused" %}
    CHANGE_MANUAL T=4
  {% endif %}

[gcode_macro _button_6]
gcode:
  {% if printer['print_stats'].state == "standby" or printer['print_stats'].state == "paused" %}
    CHANGE_MANUAL T=5
  {% endif %}

[gcode_macro _button_7]
gcode:
  {% if printer['print_stats'].state == "standby" %}
    QUAD_GANTRY_LEVEL
  {% endif %}

[gcode_macro _button_8]
gcode:
  {% if printer['print_stats'].state == "standby" %}
    {% set light_params = printer.save_variables.variables %}
    {% set service_actual = light_params['service']|int %}
    {%if service_actual == 0 %}
      PARK POS=center Z=150
      SAVE_VARIABLE VARIABLE=service VALUE=1
    {% else %}
      PARK POS=front Z=150
      SAVE_VARIABLE VARIABLE=service VALUE=0
    {% endif %}
  {% endif %}

[gcode_macro _button_9]
gcode:
  {% if printer['print_stats'].state == "standby" %}
    TURN_OFF_HEATERS
  {% endif %}

[gcode_macro _button_10]
gcode:
  {% if printer['print_stats'].state == "standby" %}
    M104 S200
  {% endif %}

[gcode_macro _button_11]
gcode:
  {% if printer['print_stats'].state == "standby" %}
    M104 S220
  {% endif %}

[gcode_macro _button_12]
gcode:
  {% if printer['print_stats'].state == "standby" %}
    M104 S250
  {% endif %}

[gcode_macro _button_13]
gcode:
  {% if printer['print_stats'].state == "standby" or printer['print_stats'].state == "paused" %}
    ERCF_UNLOCK
  {% endif %}

[gcode_macro _button_14]
gcode:
  {% if printer['print_stats'].state == "standby" or printer['print_stats'].state == "paused" %}
    ERCF_EJECT
  {% endif %}

[gcode_macro _button_15]
gcode:
  {% if printer['print_stats'].state == "standby" or printer['print_stats'].state == "paused" %}
    ERCF_HOME
  {% endif %}

#########################
### Button Definition ###
#########################

[gcode_button my_gcode_t0]
pin: !pico:gpio2
press_gcode: _button_1

[gcode_button my_gcode_t1]
pin: !pico:gpio3
press_gcode: _button_2

[gcode_button my_gcode_t2]
pin: !pico:gpio17
press_gcode: _button_3

[gcode_button my_gcode_t3]
pin: !pico:gpio18
press_gcode: _button_4

[gcode_button my_gcode_t4]
pin: !pico:gpio6
press_gcode: _button_5

[gcode_button my_gcode_t5]
pin: !pico:gpio7
press_gcode: _button_6

[gcode_button my_gcode_home]
pin: !pico:gpio8
press_gcode: _button_7

[gcode_button my_gcode_park_center]
pin: !pico:gpio9
press_gcode: _button_8

[gcode_button my_gcode_heater_off]
pin: !pico:gpio10
press_gcode: _button_9

[gcode_button my_gcode_200]
pin: !pico:gpio11
press_gcode: _button_10

[gcode_button my_gcode_220]
pin: !pico:gpio12
press_gcode: _button_11

[gcode_button my_gcode_250]
pin: !pico:gpio13
press_gcode: _button_12

[gcode_button my_gcode_ercf_unlock]
pin: !pico:gpio14
press_gcode: _button_13

[gcode_button my_gcode_ercf_eject]
pin: !pico:gpio15
press_gcode: _button_14

[gcode_button my_gcode_ercf_home]
pin: !pico:gpio16
press_gcode: _button_15

#######################################
# Display
#######################################

[display]
lcd_type: sh1106
i2c_bus: i2c1f
i2c_mcu: pico
display_group: __voron_display

#######################################
# Glyph
#######################################

[display_glyph chamber]
data:
  ................
  ****************
  *....*....*....*
  *....*....*....*
  *....******....*
  *..............*
  *..............*
  *.....****.....*
  *.***.*..*.***.*
  *.....****.....*
  *......**......*
  *..............*
  *.************.*
  *...*......*...*
  ****************
  ................
  
[display_glyph voron]
data:
 ......***.......
 ....*******.....
 ...*********....
 .*************..
 *****..***..***.
 ****..***..****.
 ***..***..*****.
 **..***..******.
 ******..***..**.
 *****..***..***.
 ****..***..****.
 ***..***..*****.
 .*************..
 ...*********....
 ....*******.....
 ......***.......  

[display_glyph raspberry]
data:
  ................
  ....****.****...
  ...*....*....*..
  ...**...*...**..
  ....*..***..*...
  ....****.****...
  ...*...***...*..
  ...**...*...**..
  ..*.*...*...*.*.
  ..*.*..***..*.*.
  ..*****...*****.
  ...*..*...*..*..
  ...*..**.**..*..
  ....*.*****.*...
  .....**...**....
  .......***......

#######################################
# Templates
#######################################

[display_template _vheater_temperature]
param_heater_name: "extruder"
text:
  {% if param_heater_name in printer %}
    {% set heater = printer[param_heater_name] %}
    # Show glyph
    {% if param_heater_name == "heater_bed" %}
      {% if heater.target %}
        {% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}
        ~bed_heat{frame}~
      {% else %}
        ~bed~
      {% endif %}
    {% else %}
      ~extruder~
    {% endif %}
    # Show temperature
    { "%3.0f" % (heater.temperature,) }
    # Optionally show target
    {% if heater.target and (heater.temperature - heater.target)|abs > 2 %}
      ~right_arrow~
      { "%0.0f" % (heater.target,) }
    {% endif %}
    ~degrees~
  {% endif %}

#######################################
# Views
#######################################

[display_data __voron_display extruder]
position: 0, 0
text: { render("_vheater_temperature", param_heater_name="extruder") }

[display_data __voron_display fan]
position: 0, 10
text:
  {% if 'fan' in printer %}
    {% set speed = printer.fan.speed %}
    {% if speed %}
      {% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}
      ~fan{frame}~
    {% else %}
      ~fan1~
    {% endif %}
    { "{:>4.0%}".format(speed) }
  {% endif %}

[display_data __voron_display bed]
position: 1, 0
text: { render("_vheater_temperature", param_heater_name="heater_bed") }

[display_data __voron_display progress_text]
position: 1, 10
text:
  {% set progress = printer.display_status.progress %}
  { "{:^6.0%}".format(progress) }
  
[display_data __voron_display progress_text2]
position: 1, 10
text:
  {% set progress = printer.display_status.progress %}
  { draw_progress_bar(1, 10, 6, progress) }

[display_data __voron_display printing_time]
position: 2, 10
text:
  {% set ptime = printer.idle_timeout.printing_time %}
  { "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }

[display_data __voron_display chamber]
position: 2, 0
text:
  {% set chamber = printer['temperature_fan exhaust_fan'] %}
	~chamber~
	{ "%3.0f" % (chamber.temperature,) }
	~degrees~

[display_data __voron_display print_status]
position: 3, 0
text: 
  {% if printer.display_status.message %}
    { printer.display_status.message }
  {% elif printer.idle_timeout.printing_time %}
    {% set raspberry = printer['temperature_sensor RPI'] %}
    ~raspberry~
     { "%3.0f" % (raspberry.temperature,) }
    ~degrees~
      {% set pos = printer.toolhead.position %}
    { "    Z%-5.2f" % (pos.z) }
  {% else %}
    ~voron~
    { " V0.509" }
  {% endif %}









